import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { PrimeNgSharedModule } from '../../../../shared/prime-ng-shared.module';
import {
  StudentApiService,
  StudentAPI,
} from '../../../../services/test/student-api.service';
import { MessageService } from 'primeng/api';
import { ProgressSpinnerModule } from 'primeng/progressspinner';
<<<<<<< HEAD
import { AuthService } from '../../../../services/test/auth.service';
=======
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f

@Component({
  selector: 'app-student-manage',
  standalone: true,
  templateUrl: './student-manage.component.html',
  styleUrls: ['./student-manage.component.scss'],
  imports: [PrimeNgSharedModule, ProgressSpinnerModule],
  providers: [MessageService],
})
export class StudentmanageComponent implements OnInit {
  studentId?: number;
  isEditMode = false;
  loading = false;
  canEdit = true;
  isViewOnly = false;

  student = {
    fullname: '',
    university: '',
    faculty: '',
    major: '',
    contact_number: '',
    email: '',
    intern_department: '',
    intern_duration: '',
    attached_project: '',
<<<<<<< HEAD
=======
    description: '',
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
  };

  profilePreview: string | ArrayBuffer | null = null;
  projectFileName: string = '';
  existingProjectFileUrl: string = '';

  profileFile: File | null = null;
  projectFile: File | null = null;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private studentApiService: StudentApiService,
    private messageService: MessageService,
    private authService: AuthService
  ) {}

  ngOnInit(): void {
<<<<<<< HEAD
    // üîç Debug: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const currentUser = this.authService.currentUserValue;
    console.log('üîç Current User:', currentUser);
    console.log('üîç User Role:', currentUser?.role);
    console.log('üîç User ID:', currentUser?.id);

    // ‚úÖ ‡∏ñ‡πâ‡∏≤ user.id = 0 ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å loadCurrentUser()
    if (currentUser && currentUser.id === 0) {
      console.warn('‚ö†Ô∏è User ID is 0, loading full user data...');
      this.authService.loadCurrentUser().subscribe({
        next: (user) => {
          console.log('‚úÖ User data reloaded:', user);
        },
        error: (err) => {
          console.error('‚ùå Failed to reload user:', err);
        }
      });
    }

    this.route.paramMap.subscribe(params => {
=======
    this.route.paramMap.subscribe((params) => {
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
      const id = params.get('id');
      if (id) {
        this.isEditMode = true;
        this.studentId = +id;
        this.loadStudent(this.studentId);
        this.checkEditPermission(this.studentId);
      } else {
        this.isEditMode = false;
        this.canEdit = true;
        this.isViewOnly = false;
      }
    });
  }

  /**
   * ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
   * - ADMIN = ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠
   * - USER = ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
   */
  checkEditPermission(studentId: number): void {
    const currentUser = this.authService.currentUserValue;

    // ‚ö†Ô∏è ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ user ‡∏´‡∏£‡∏∑‡∏≠ user.id = 0 ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà
    if (!currentUser || currentUser.id === 0) {
      console.warn('‚ö†Ô∏è User not fully loaded, waiting...');
      setTimeout(() => this.checkEditPermission(studentId), 500);
      return;
    }

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô ADMIN ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
    if (currentUser.role === 'ADMIN') {
      this.canEdit = true;
      this.isViewOnly = false;
      console.log('‚úÖ Admin user - full access granted');
      return;
    }

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Admin ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    console.log('üîç Checking edit permission for student ID:', studentId);

    this.studentApiService.canEdit(studentId).subscribe({
      next: (response) => {
        console.log('üì° API Response:', response);
        this.canEdit = response.canEdit;
        this.isViewOnly = !response.canEdit;

        if (this.isViewOnly) {
          this.messageService.add({
            severity: 'info',
            summary: '‡πÇ‡∏´‡∏°‡∏î‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
            detail: response.reason || '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ',
            life: 5000
          });
        }

        console.log('‚úÖ Permission Check Result:', {
          canEdit: this.canEdit,
          isViewOnly: this.isViewOnly
        });
      },
      error: (err) => {
        console.error('‚ùå Error checking permission:', err);

        // ‚úÖ ‡∏ñ‡πâ‡∏≤ error 401 ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ session
        if (err.status === 401) {
          this.messageService.add({
            severity: 'error',
            summary: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á',
            detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á',
            life: 5000
          });

          // Redirect ‡πÑ‡∏õ login
          setTimeout(() => {
            this.authService.logout();
            this.router.navigate(['/login']);
          }, 2000);
          return;
        }

        // ‚úÖ Error ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô view-only
        this.canEdit = false;
        this.isViewOnly = true;

        this.messageService.add({
          severity: 'warn',
          summary: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
          detail: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô',
          life: 5000
        });
      }
    });
  }

  loadStudent(id: number) {
    this.loading = true;
    this.studentApiService.getById(id).subscribe({
      next: (student) => {
        this.student = {
          fullname: student.fullname,
          university: student.university,
          faculty: student.faculty,
          major: student.major,
          contact_number: student.contact_number,
          email: student.email,
          intern_department: student.intern_department,
          intern_duration: student.intern_duration,
<<<<<<< HEAD
          attached_project: student.attached_project || ''
=======
          attached_project: student.attached_project || '',
          description: '',
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
        };

        if (student.profile_file) {
          this.profilePreview = `http://localhost:8080/uploads/${student.profile_file}`;
        }

        if (student.project_file) {
          this.projectFileName = student.project_file.split('/').pop() || '';
          this.existingProjectFileUrl = `http://localhost:8080/uploads/${student.project_file}`;
        }

        this.loading = false;
      },
      error: (err) => {
        console.error('Error loading student:', err);
        this.messageService.add({
          severity: 'error',
          summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
<<<<<<< HEAD
          detail: err.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ'
=======
          detail: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ',
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
        });
        this.loading = false;
      },
    });
  }

  downloadProjectFile() {
    if (!this.existingProjectFileUrl) {
      this.messageService.add({
        severity: 'warn',
        summary: '‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
        detail: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå'
      });
      return;
    }

    const fileUrlParts = this.existingProjectFileUrl.split('/');
    const type = fileUrlParts[fileUrlParts.length - 2];
    const filename = fileUrlParts[fileUrlParts.length - 1];

    this.studentApiService.downloadFile(type, filename).subscribe({
      next: (blob: Blob) => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = this.projectFileName || filename;
        a.click();
        window.URL.revokeObjectURL(url);
      },
      error: (err) => {
        console.error('Error downloading file:', err);
        this.messageService.add({
          severity: 'error',
          summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
          detail: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ'
        });
      }
    });
  }

  onProfileChange(event: any) {
    if (this.isViewOnly) {
      this.messageService.add({
        severity: 'warn',
        summary: '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï',
        detail: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ'
      });
      event.target.value = '';
      return;
    }

    const file = event.target.files[0];
    if (file) {
      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
      if (!allowedTypes.includes(file.type)) {
        this.messageService.add({
          severity: 'error',
          summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
          detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (JPG, PNG, GIF)'
        });
        event.target.value = '';
        return;
      }

      const maxSize = 5 * 1024 * 1024;
      if (file.size > maxSize) {
        this.messageService.add({
          severity: 'error',
          summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
          detail: '‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5MB)'
        });
        event.target.value = '';
        return;
      }

      this.profileFile = file;
      const reader = new FileReader();
      reader.onload = () => {
        this.profilePreview = reader.result;
      };
      reader.readAsDataURL(file);
    }
  }

  onProjectChange(event: any) {
    if (this.isViewOnly) {
      this.messageService.add({
        severity: 'warn',
        summary: '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï',
        detail: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ'
      });
      event.target.value = '';
      return;
    }

    const file = event.target.files[0];
    if (file) {
      const allowedTypes = [
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'application/zip',
        'application/x-zip-compressed'
      ];

      if (!allowedTypes.includes(file.type)) {
        this.messageService.add({
          severity: 'error',
          summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
          detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå PDF, DOC, DOCX ‡∏´‡∏£‡∏∑‡∏≠ ZIP ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô'
        });
        event.target.value = '';
        return;
      }

      const maxSize = 10 * 1024 * 1024;
      if (file.size > maxSize) {
        this.messageService.add({
          severity: 'error',
          summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
          detail: '‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10MB)'
        });
        event.target.value = '';
        return;
      }

      this.projectFile = file;
      this.projectFileName = file.name;
      this.student.attached_project = file.name;
      this.existingProjectFileUrl = '';
    }
  }

<<<<<<< HEAD
  onSave() {
    if (this.isViewOnly) {
      this.messageService.add({
        severity: 'error',
        summary: '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï',
        detail: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ'
=======
  downloadProjectFile() {
    if (this.existingProjectFileUrl) {
      window.open(this.existingProjectFileUrl, '_blank');
    } else if (this.projectFile) {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà save ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î preview ‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÑ‡∏î‡πâ (optional)
      const url = URL.createObjectURL(this.projectFile);
      window.open(url, '_blank');
    }
  }

  onSave() {
    // Validate required fields
    if (
      !this.student.fullname ||
      !this.student.university ||
      !this.student.faculty ||
      !this.student.major ||
      !this.student.contact_number ||
      !this.student.email
    ) {
      this.messageService.add({
        severity: 'error',
        summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
      });
      return;
    }

<<<<<<< HEAD
    if (!this.student.fullname || !this.student.university ||
        !this.student.faculty || !this.student.major ||
        !this.student.contact_number || !this.student.email) {
      this.messageService.add({
        severity: 'error',
        summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô'
      });
      return;
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(this.student.email)) {
      this.messageService.add({
        severity: 'error',
        summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        detail: '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
      });
      return;
    }

    this.loading = true;

    const formData = new FormData();
    const currentUser = this.authService.currentUserValue;

    // ‚úÖ ‡πÉ‡∏ä‡πâ user.id ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const createdBy = currentUser?.id || 0;

    console.log('üíæ Saving with user ID:', createdBy);

    const studentData: StudentAPI = {
      fullname: this.student.fullname.trim(),
      university: this.student.university.trim(),
      faculty: this.student.faculty.trim(),
      major: this.student.major.trim(),
      contact_number: this.student.contact_number.trim(),
      email: this.student.email.trim().toLowerCase(),
      intern_department: this.student.intern_department?.trim() || '',
      intern_duration: this.student.intern_duration?.trim() || '',
      attached_project: this.student.attached_project || null,
      grade: null,
      created_by: createdBy
=======
    this.loading = true;

    const formData = new FormData();

    const studentData: StudentAPI = {
      fullname: this.student.fullname,
      university: this.student.university,
      faculty: this.student.faculty,
      major: this.student.major,
      contact_number: this.student.contact_number,
      email: this.student.email,
      intern_department: this.student.intern_department,
      intern_duration: this.student.intern_duration,
      attached_project: this.student.attached_project || null,
      grade: null,
      created_by: 1, // TODO: ‡πÉ‡∏ä‡πâ User ID ‡∏à‡∏≤‡∏Å AuthService
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
    };

    formData.append('student', JSON.stringify(studentData));

<<<<<<< HEAD
    if (this.profileFile) formData.append('profileFile', this.profileFile);
    if (this.projectFile) formData.append('projectFile', this.projectFile);

    if (this.isEditMode && this.studentId) {
      this.updateStudent(formData);
    } else {
      this.createStudent(formData);
    }
  }

  private createStudent(formData: FormData) {
    this.studentApiService.createWithFiles(formData).subscribe({
      next: () => {
        this.messageService.add({
          severity: 'success',
          summary: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          detail: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'
        });
        this.loading = false;
        setTimeout(() => this.router.navigate(['/student']), 1500);
      },
      error: (err) => {
        console.error('Error creating student:', err);

        // ‚úÖ ‡∏ñ‡πâ‡∏≤ error 401 ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
        if (err.status === 401) {
          this.messageService.add({
            severity: 'error',
            summary: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á',
            detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
          });
          setTimeout(() => {
            this.authService.logout();
            this.router.navigate(['/login']);
          }, 2000);
        } else {
          this.messageService.add({
            severity: 'error',
            summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
            detail: err.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ'
          });
        }
        this.loading = false;
      }
    });
  }

  private updateStudent(formData: FormData) {
    this.studentApiService.updateWithFiles(this.studentId!, formData).subscribe({
      next: () => {
        this.messageService.add({
          severity: 'success',
          summary: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          detail: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'
        });
        this.loading = false;
        setTimeout(() => this.router.navigate(['/student']), 1500);
      },
      error: (err) => {
        console.error('Error updating student:', err);

        // ‚úÖ ‡∏ñ‡πâ‡∏≤ error 401 ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
        if (err.status === 401) {
          this.messageService.add({
            severity: 'error',
            summary: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á',
            detail: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
          });
          setTimeout(() => {
            this.authService.logout();
            this.router.navigate(['/login']);
          }, 2000);
        } else {
          const errorMessage = err.error?.message || err.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ';
          this.messageService.add({
            severity: 'error',
            summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
            detail: errorMessage
          });
        }
        this.loading = false;
      }
    });
  }

  onCancel() {
    this.router.navigate(['/student']);
  }
=======
    if (this.profileFile) {
      formData.append('profileFile', this.profileFile);
    }

    if (this.projectFile) {
      formData.append('projectFile', this.projectFile);
    }

    if (this.isEditMode && this.studentId) {
      // ‚úÖ Update existing student
      this.studentApiService
        .updateWithFiles(this.studentId, formData)
        .subscribe({
          next: (response) => {
            this.messageService.add({
              severity: 'success',
              summary: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
              detail: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            });
            this.loading = false;
            setTimeout(() => this.router.navigate(['/student']), 1000);
          },
          error: (err) => {
            console.error('Error updating student:', err);
            this.messageService.add({
              severity: 'error',
              summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
              detail: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ',
            });
            this.loading = false;
          },
        });
    } else {
      // ‚úÖ Create new student
      this.studentApiService.createWithFiles(formData).subscribe({
        next: (response) => {
          this.messageService.add({
            severity: 'success',
            summary: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            detail: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
          });
          this.loading = false;
          setTimeout(() => this.router.navigate(['/student']), 1000);
        },
        error: (err) => {
          console.error('Error creating student:', err);
          this.messageService.add({
            severity: 'error',
            summary: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
            detail: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ',
          });
          this.loading = false;
        },
      });
    }
  }

  onCancel() {
    this.router.navigate(['/student']);
  }
>>>>>>> 15557ce36fc6be6a95003b0a49c0a3038c5c359f
}
